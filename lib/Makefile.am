AM_CPPFLAGS = -D__USER__="\"`whoami` at `hostname`\"" \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/csri/include
AM_CFLAGS=$(werror)

SUBDIRS = amd64 i686
if BUILD_AMD64
ASM = amd64/commit.o
CLEANFILES = $(ASM)
endif
if BUILD_I686
ASM = i686/commit_rgb.lo
CLEANFILES = $(ASM) i686/commit_rgb.o
endif
if BUILD_MINGW
ASMOPT = -D__OUTPUT_FORMAT__=Win32
endif

amd64/commit.o: $(srcdir)/amd64/commit.asm
	$(YASM) -f elf -g stabs $(ASMOPT) -a x86 -m amd64 -o $@ $^

i686/%.lo: objname = $(@:.lo=.o)
i686/%.lo: picname = .libs/$(patsubst i686/%,%,$(objname))
i686/%.lo: $(srcdir)/i686/%.asm
	echo obj $(objname) pic $(picname)
	$(NASM) -f elf $(ASMOPT) -o ${picname} $^
	$(NASM) -f elf $(ASMOPT) -DNO_PIC -o ${objname} $^
	echo -e "# Generated by libtool\npic_object='../${picname}'\nnon_pic_object='../${objname}'" > $@

noinst_HEADERS = blitter_internal.h
csrilib_LTLIBRARIES = libasa.la
libasa_la_SOURCES = \
	asa_errtexts.c \
	asa_font.c \
	assa.c \
	blitter.c \
	csri.c \
	optimise.c \
	spanproc.c \
	ssa_anim.c \
	ssa_frag.c \
	ssa_glyphload.c \
	ssa_lexer.c \
	ssa_run.c \
	ssa_vm.c \
	ssa_wrap.c \
	utf8.c


libasa_la_LIBADD = \
	../csri/subhelp/libsubhelp_la-openfile.lo \
	../csri/subhelp/libsubhelp_la-logging.lo \
	$(ASM)
libasa_la_LDFLAGS = -version-info 0:0:0 -no-undefined
libasa_la_CFLAGS = $(FREETYPE_CFLAGS) $(FONTCONFIG_CFLAGS)
 
